(* Generated by coq-of-rust *)
Require Import Coq.Strings.String.
Require Import Coq.ZArith.ZArith.
Local Open Scope Z.

Definition u8 : Set := Z.

(* Approximation *)
Definition f64 : Set := Z.

Module my :=
  Module OpenBox.
    Record t : Set := {
      contents : T;
    }.
  End OpenBox.
  Definition OpenBox : Set := OpenBox.t.
  
  Module ClosedBox.
    Record t : Set := {
      contents : T;
    }.
  End ClosedBox.
  Definition ClosedBox : Set := ClosedBox.t.
  
  (* Impl [ClosedBox] *)
  Module ImplClosedBox.
    Definition new (contents : T) : ClosedBox :=
      {| ClosedBox.contents := contents; |}.
  End ImplClosedBox.
  (* End impl [ClosedBox] *).

Module OpenBox.
  Record t : Set := {
    contents : T;
  }.
End OpenBox.
Definition OpenBox : Set := OpenBox.t.

Module ClosedBox.
  Record t : Set := {
    contents : T;
  }.
End ClosedBox.
Definition ClosedBox : Set := ClosedBox.t.

(* Impl [ClosedBox] *)
Module ImplClosedBox.
  Definition new (contents : T) : ClosedBox :=
    {| ClosedBox.contents := contents; |}.
End ImplClosedBox.
(* End impl [ClosedBox] *)