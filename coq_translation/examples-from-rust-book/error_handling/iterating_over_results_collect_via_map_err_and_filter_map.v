(* Generated by coq-of-rust *)
Require Import Coq.Strings.String.
Require Import Coq.ZArith.ZArith.
Local Open Scope Z.

(* Approximation *)

Definition u8 : Set := Z.
Definition u16 : Set := Z.
Definition u32 : Set := Z.
Definition u64 : Set := Z.
Definition u128 : Set := Z.

Definition i8 : Set := Z.
Definition i16 : Set := Z.
Definition i32 : Set := Z.
Definition i64 : Set := Z.
Definition i128 : Set := Z.

Definition f32 : Set := Z.
Definition f64 : Set := Z.

Definition main (_ : unit) :=
  let strings := ComplexTypePath.into_vec ["42";"tofu";"93";"999";"18"] in
  let errors := _crate::vec::ImplVec.new tt in
  let numbers := collect
    (filter_map
      (map (into_iter strings) (fun s => parse s))
      (fun r => ok (map_err r (fun e => push errors e)))) in
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["Numbers: ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_debug numbers]) ;;
  tt ;;
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["Errors: ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_debug errors]) ;;
  tt ;;
  tt.