(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Definition give_adult (_ : unit) :=
  match drink with
  | Some (Str("lemonade", Cooked)) =>
    _crate.io._print
      (_crate::fmt::ImplArguments.new_v1 ["Yuck! Too sugary.\n"] []) ;;
    tt
  | Some (inner) =>
    _crate.io._print
      (_crate::fmt::ImplArguments.new_v1
        ["";"? How nice.\n"]
        [_crate::fmt::ImplArgumentV1.new_display inner]) ;;
    tt
  | None =>
    _crate.io._print
      (_crate::fmt::ImplArguments.new_v1 ["No drink? Oh well.\n"] []) ;;
    tt
  end.

Definition drink (_ : unit) :=
  let inside := method "unwrap" drink in
  if eqb inside "lemonade" then
    _crate.rt.begin_panic "AAAaaaaa!!!!" ;;
    tt
  else
    tt ;;
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["I love ";"s!!!!!\n"]
      [_crate::fmt::ImplArgumentV1.new_display inside]) ;;
  tt ;;
  tt.

Definition main (_ : unit) :=
  let water := Some "water" in
  let lemonade := Some "lemonade" in
  let void := None in
  give_adult water ;;
  give_adult lemonade ;;
  give_adult void ;;
  let coffee := Some "coffee" in
  let nothing := None in
  drink coffee ;;
  drink nothing ;;
  tt.
