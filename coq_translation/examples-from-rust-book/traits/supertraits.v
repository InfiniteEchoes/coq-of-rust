(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module Person.
  Class Class (Self : Set) : Set := {
    name : (ref Self) -> String;
  }.
  
  Global Instance M_name `(Class) : Method "name" _ := {|
    method := name;
  |}.
  Class AssociatedFunction (name : string) (T : Set) : Set := {
    associated_function : T;
  }.
  Arguments associated_function name {T AssociatedFunction}.
End Person.

Module Student.
  Class Class (Self : Set) : Set := {
    university : (ref Self) -> String;
  }.
  
  Global Instance M_university `(Class) : Method "university" _ := {|
    method := university;
  |}.
  Class AssociatedFunction (name : string) (T : Set) : Set := {
    associated_function : T;
  }.
  Arguments associated_function name {T AssociatedFunction}.
End Student.

Module Programmer.
  Class Class (Self : Set) : Set := {
    fav_language : (ref Self) -> String;
  }.
  
  Global Instance M_fav_language `(Class) : Method "fav_language" _ := {|
    method := fav_language;
  |}.
  Class AssociatedFunction (name : string) (T : Set) : Set := {
    associated_function : T;
  }.
  Arguments associated_function name {T AssociatedFunction}.
End Programmer.

Module CompSciStudent.
  Class Class (Self : Set) : Set := {
    git_username : (ref Self) -> String;
  }.
  
  Global Instance M_git_username `(Class) : Method "git_username" _ := {|
    method := git_username;
  |}.
  Class AssociatedFunction (name : string) (T : Set) : Set := {
    associated_function : T;
  }.
  Arguments associated_function name {T AssociatedFunction}.
End CompSciStudent.

Definition comp_sci_student_greeting (student : ref TraitObject) : String :=
  let res :=
    _crate.fmt.format
      (_crate.fmt.ImplArguments.new_v1
        [
          "My name is ";
          " and I attend ";
          ". My favorite language is ";
          ". My Git username is "
        ]
        [
          _crate.fmt.ImplArgumentV1.new_display (method "name" student);
          _crate.fmt.ImplArgumentV1.new_display (method "university" student);
          _crate.fmt.ImplArgumentV1.new_display (method "fav_language" student);
          _crate.fmt.ImplArgumentV1.new_display (method "git_username" student)
        ]) in
  res.

Definition main (_ : unit) : unit := tt.
