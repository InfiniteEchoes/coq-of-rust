(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module ops := std.ops.

Error StructUnit.

Error StructUnit.

Error StructUnit.

Module Impl__crate_fmt_Debug_for_FooBar.
  Definition Self := FooBar.
  
  Definition fmt
      (self : ref Self)
      (f : mut_ref _crate.fmt.Formatter)
      : _crate.fmt.Result :=
    _crate.fmt.Formatter::["write_str"] f "FooBar".
  
  Global Instance Method_fmt : Notation.Dot "fmt" := {|
    Notation.dot := fmt;
  |}.
  
  Global Instance I : _crate.fmt.Debug.Trait Self := {|
    _crate.fmt.Debug.fmt := fmt;
  |}.
End Impl__crate_fmt_Debug_for_FooBar.

Error StructUnit.

Module Impl__crate_fmt_Debug_for_BarFoo.
  Definition Self := BarFoo.
  
  Definition fmt
      (self : ref Self)
      (f : mut_ref _crate.fmt.Formatter)
      : _crate.fmt.Result :=
    _crate.fmt.Formatter::["write_str"] f "BarFoo".
  
  Global Instance Method_fmt : Notation.Dot "fmt" := {|
    Notation.dot := fmt;
  |}.
  
  Global Instance I : _crate.fmt.Debug.Trait Self := {|
    _crate.fmt.Debug.fmt := fmt;
  |}.
End Impl__crate_fmt_Debug_for_BarFoo.

Module Impl_ops_Add_for_Foo.
  Definition Self := Foo.
  
  Definition Output : Set := FooBar.
  
  Definition add (self : Self) (_rhs : Bar) : FooBar :=
    _crate.io._print
      (_crate.fmt.Arguments::["new_v1"]
        [ "> Foo.add(Bar) was called\n" ]
        [  ]) ;;
    tt ;;
    FooBar.
  
  Global Instance Method_add : Notation.Dot "add" := {|
    Notation.dot := add;
  |}.
  
  Global Instance I : ops.Add.Trait Bar Self := {|
    ops.Add.Output := Output;
    ops.Add.add := add;
  |}.
End Impl_ops_Add_for_Foo.

Module Impl_ops_Add_for_Bar.
  Definition Self := Bar.
  
  Definition Output : Set := BarFoo.
  
  Definition add (self : Self) (_rhs : Foo) : BarFoo :=
    _crate.io._print
      (_crate.fmt.Arguments::["new_v1"]
        [ "> Bar.add(Foo) was called\n" ]
        [  ]) ;;
    tt ;;
    BarFoo.
  
  Global Instance Method_add : Notation.Dot "add" := {|
    Notation.dot := add;
  |}.
  
  Global Instance I : ops.Add.Trait Foo Self := {|
    ops.Add.Output := Output;
    ops.Add.add := add;
  |}.
End Impl_ops_Add_for_Bar.

Definition main (_ : unit) : unit :=
  _crate.io._print
    (_crate.fmt.Arguments::["new_v1"]
      [ "Foo + Bar = "; "\n" ]
      [ _crate.fmt.ArgumentV1::["new_debug"] (Foo.["add"] Bar) ]) ;;
  tt ;;
  _crate.io._print
    (_crate.fmt.Arguments::["new_v1"]
      [ "Bar + Foo = "; "\n" ]
      [ _crate.fmt.ArgumentV1::["new_debug"] (Bar.["add"] Foo) ]) ;;
  tt ;;
  tt.
