(* Generated by coq-of-rust *)
Require Import Coq.Strings.String.
Require Import Coq.ZArith.ZArith.
Local Open Scope Z.

Definition u8 : Set := Z.

(* Approximation *)
Definition f64 : Set := Z.

Error Struct.

(* Impl [Unit] of trait [_crate.fmt.Debug]*)
Module ImplUnit.
  Definition
    fmt
    (self : ref Self)
    (f : ref _crate.fmt.Formatter)
    : _crate.fmt.Result :=
    _crate::fmt::ImplFormatter.write_str f "Unit".
End ImplUnit.
(* End impl [Unit] *)

(* Impl [Unit] of trait [_crate.clone.Clone]*)
Module ImplUnit.
  Definition clone (self : ref Self) : Unit :=
    deref self.
End ImplUnit.
(* End impl [Unit] *)

(* Impl [Unit] of trait [_crate.marker.Copy]*)
Module ImplUnit.
  
End ImplUnit.
(* End impl [Unit] *)

Definition Pair : Set :=
  Box * Box.

(* Impl [Pair] of trait [_crate.clone.Clone]*)
Module ImplPair.
  Definition clone (self : ref Self) : Pair :=
    Pair
      (_crate.clone.Clone.clone self.(Pair.0))
      (_crate.clone.Clone.clone self.(Pair.1)).
End ImplPair.
(* End impl [Pair] *)

(* Impl [Pair] of trait [_crate.fmt.Debug]*)
Module ImplPair.
  Definition
    fmt
    (self : ref Self)
    (f : ref _crate.fmt.Formatter)
    : _crate.fmt.Result :=
    _crate::fmt::ImplFormatter.debug_tuple_field2_finish
      f
      "Pair"
      self.(Pair.0)
      self.(Pair.1).
End ImplPair.
(* End impl [Pair] *)