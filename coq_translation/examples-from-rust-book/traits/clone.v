(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Error Struct.

Module Impl__crate_fmt_Debug_for_Unit.
  Definition Self := Unit.
  
  #[global] Instance I : _crate.fmt.Debug.Class Self := {|
    fmt
      (self : static_ref Unit)
      (f : mut_ref _crate.fmt.Formatter)
      :=
      _crate::fmt::ImplFormatter.write_str f "Unit";
  |}.
Module ImplUnit.

Module Impl__crate_clone_Clone_for_Unit.
  Definition Self := Unit.
  
  #[global] Instance I : _crate.clone.Clone.Class Self := {|
    clone (self : static_ref Unit) := deref self;
  |}.
Module ImplUnit.

Module Impl__crate_marker_Copy_for_Unit.
  Definition Self := Unit.
  
  #[global] Instance I : _crate.marker.Copy.Class Self := {|
  |}.
Module ImplUnit.

Definition Pair : Set :=
  Box * Box.

Module Impl__crate_clone_Clone_for_Pair.
  Definition Self := Pair.
  
  #[global] Instance I : _crate.clone.Clone.Class Self := {|
    clone
      (self : static_ref Pair)
      :=
      Pair (_crate.clone.Clone.clone self.0) (_crate.clone.Clone.clone self.1);
  |}.
Module ImplPair.

Module Impl__crate_fmt_Debug_for_Pair.
  Definition Self := Pair.
  
  #[global] Instance I : _crate.fmt.Debug.Class Self := {|
    fmt
      (self : static_ref Pair)
      (f : mut_ref _crate.fmt.Formatter)
      :=
      _crate::fmt::ImplFormatter.debug_tuple_field2_finish
        f
        "Pair"
        self.0
        self.1;
  |}.
Module ImplPair.

Definition main (_ : unit) :=
  let unit := Unit in
  let copied_unit := unit in
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["original: ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_debug unit]) ;;
  tt ;;
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["copy: ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_debug copied_unit]) ;;
  tt ;;
  let pair := Pair (ImplBox.new 1) (ImplBox.new 2) in
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["original: ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_debug pair]) ;;
  tt ;;
  let moved_pair := pair in
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["moved: ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_debug moved_pair]) ;;
  tt ;;
  let cloned_pair := clone moved_pair in
  drop moved_pair ;;
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["clone: ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_debug cloned_pair]) ;;
  tt ;;
  tt.
