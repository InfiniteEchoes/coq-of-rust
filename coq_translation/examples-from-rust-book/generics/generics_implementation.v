(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Val.
  Record t : Set := {
    val : f64;
  }.
End Val.
Definition Val : Set := Val.t.

Module GenVal.
  Record t : Set := {
    gen_val : T;
  }.
End GenVal.
Definition GenVal : Set := GenVal.t.

(* Impl [Val] *)
Module ImplVal.
  Definition value (self : ref Val) : ref f64 := self.val.
End ImplVal.
(* End impl [Val] *)

(* Impl [GenVal] *)
Module ImplGenVal.
  Definition value (self : ref GenVal<T>) : ref T := self.gen_val.
End ImplGenVal.
(* End impl [GenVal] *)

Definition main (_ : unit) : unit :=
  let x := {| Val.val := 3 (* 3.0 *); |} in
  let y := {| GenVal.gen_val := 3; |} in
  _crate.io._print
    (_crate.fmt.ImplArguments.new_v1
      [ ""; ", "; "\n" ]
      [
        _crate.fmt.ImplArgumentV1.new_display (method "value" x);
        _crate.fmt.ImplArgumentV1.new_display (method "value" y)
      ]) ;;
  tt ;;
  tt.
