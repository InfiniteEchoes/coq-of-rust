(* Generated by coq-of-rust *)
Require Import Coq.Strings.String.
Require Import Coq.ZArith.ZArith.
Local Open Scope Z.

Definition u8 : Set := Z.

(* Approximation *)
Definition f64 : Set := Z.

Module Val.
  Record t : Set := {
    val : f64;
  }.
End Val.
Definition Val : Set := Val.t.

Module GenVal.
  Record t : Set := {
    gen_val : T;
  }.
End GenVal.
Definition GenVal : Set := GenVal.t.

(* Impl [Val] *)
Module ImplVal.
  Definition value (self : static_ref Self) : static_ref f64 :=
    self.val.
End ImplVal.
(* End impl [Val] *)

(* Impl [GenVal] *)
Module ImplGenVal.
  Definition value (self : static_ref Self) : static_ref T :=
    self.gen_val.
End ImplGenVal.
(* End impl [GenVal] *)

Definition main (_ : unit) :=
  let x := {| Val.val := 3 (* 3.0 *); |} in
  let y := {| GenVal.gen_val := 3; |} in
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["";", ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_display
        (value x);_crate::fmt::ImplArgumentV1.new_display (value y)]) ;;
  tt ;;
  tt.