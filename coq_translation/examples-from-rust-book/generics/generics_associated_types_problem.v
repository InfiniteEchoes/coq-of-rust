(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Container.
  Inductive t : Set := Build (_ : i32 * i32).
  
  Global Instance Get_0 : IndexedField.Class t 0 i32 := {|
    IndexedField.get '(Build x0 _) := x0;
  |}.
  Global Instance Get_1 : IndexedField.Class t 1 i32 := {|
    IndexedField.get '(Build _ x1) := x1;
  |}.
End Container.
Definition Container := Container.t.

Module Contains.
  Class Class (Self : Set) : Set := {
    contains : ref Self -> ref A -> ref B -> bool;
    first : ref Self -> i32;
    last : ref Self -> i32;
  }.
End Contains.

Module Impl_Contains_for_Container.
  Definition Self := Container.
  
  Global Instance I : Contains.Class Self := {|
    Contains.contains
        (self : ref Container)
        (number_1 : ref i32)
        (number_2 : ref i32) :=
      and
        (eq (IndexedField.get (index := 0) self) number_1)
        (eq (IndexedField.get (index := 1) self) number_2);
    Contains.first (self : ref Container) := IndexedField.get (index := 0) self;
    Contains.last (self : ref Container) := IndexedField.get (index := 1) self;
  |}.
Module ImplContainer.

Definition difference (_ : unit) := sub (last container) (first container).

Definition main (_ : unit) :=
  let number_1 := 3 in
  let number_2 := 10 in
  let container := Container number_1 number_2 in
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["Does container contain ";" and ";": ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_display
        number_1;_crate::fmt::ImplArgumentV1.new_display
        number_2;_crate::fmt::ImplArgumentV1.new_display
        (contains container number_1 number_2)]) ;;
  tt ;;
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["First number: ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_display (first container)]) ;;
  tt ;;
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["Last number: ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_display (last container)]) ;;
  tt ;;
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["The difference is: ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_display (difference container)]) ;;
  tt ;;
  tt.
