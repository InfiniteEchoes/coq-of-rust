(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module PhantomData := std.marker.PhantomData.
Definition PhantomData := PhantomData.t.

Module Add := std.ops.Add.

Module Inch.
  Inductive t : Set :=
  .
End Inch.
Definition Inch := Inch.t.

Module Impl__crate_fmt_Debug_for_Inch.
  Definition Self := Inch.
  
  Global Instance I : _crate.fmt.Debug.Class Self := {|
    Definition fmt
        (self : ref Self)
        (f : mut_ref _crate.fmt.Formatter)
        : _crate.fmt.Result :=
      _crate.intrinsics.unreachable tt.
    
    Global Instance AF_fmt : Inch.AssociatedFunction "fmt" _ := {|
      Inch.associated_function := fmt;
    |}.
    Global Instance M_fmt : Method "fmt" _ := {|
      method := fmt;
    |}.
  |}.
End Impl__crate_fmt_Debug_for_Inch.

Module Impl__crate_clone_Clone_for_Inch.
  Definition Self := Inch.
  
  Global Instance I : _crate.clone.Clone.Class Self := {|
    Definition clone (self : ref Self) : Inch := deref self.
    
    Global Instance AF_clone : Inch.AssociatedFunction "clone" _ := {|
      Inch.associated_function := clone;
    |}.
    Global Instance M_clone : Method "clone" _ := {|
      method := clone;
    |}.
  |}.
End Impl__crate_clone_Clone_for_Inch.

Module Impl__crate_marker_Copy_for_Inch.
  Definition Self := Inch.
  
  Global Instance I : _crate.marker.Copy.Class Self :=
      _crate.marker.Copy.Build_Class _.
End Impl__crate_marker_Copy_for_Inch.

Module Mm.
  Inductive t : Set :=
  .
End Mm.
Definition Mm := Mm.t.

Module Impl__crate_fmt_Debug_for_Mm.
  Definition Self := Mm.
  
  Global Instance I : _crate.fmt.Debug.Class Self := {|
    Definition fmt
        (self : ref Self)
        (f : mut_ref _crate.fmt.Formatter)
        : _crate.fmt.Result :=
      _crate.intrinsics.unreachable tt.
    
    Global Instance AF_fmt : Mm.AssociatedFunction "fmt" _ := {|
      Mm.associated_function := fmt;
    |}.
    Global Instance M_fmt : Method "fmt" _ := {|
      method := fmt;
    |}.
  |}.
End Impl__crate_fmt_Debug_for_Mm.

Module Impl__crate_clone_Clone_for_Mm.
  Definition Self := Mm.
  
  Global Instance I : _crate.clone.Clone.Class Self := {|
    Definition clone (self : ref Self) : Mm := deref self.
    
    Global Instance AF_clone : Mm.AssociatedFunction "clone" _ := {|
      Mm.associated_function := clone;
    |}.
    Global Instance M_clone : Method "clone" _ := {|
      method := clone;
    |}.
  |}.
End Impl__crate_clone_Clone_for_Mm.

Module Impl__crate_marker_Copy_for_Mm.
  Definition Self := Mm.
  
  Global Instance I : _crate.marker.Copy.Class Self :=
      _crate.marker.Copy.Build_Class _.
End Impl__crate_marker_Copy_for_Mm.

Module Length.
  Inductive t : Set := Build (_ : f64) (_ : PhantomData).
  
  Global Instance Get_0 : IndexedField.Class t 0 _ := {|
    IndexedField.get '(Build x0 _) := x0;
  |}.
  Global Instance Get_1 : IndexedField.Class t 1 _ := {|
    IndexedField.get '(Build _ x1) := x1;
  |}.
End Length.
Definition Length := Length.t.

Module Impl__crate_fmt_Debug_for_Length.
  Definition Self := Length.
  
  Global Instance I Unit : _crate.fmt.Debug.Class Self := {|
    Definition fmt
        (self : ref Self)
        (f : mut_ref _crate.fmt.Formatter)
        : _crate.fmt.Result :=
      _crate.fmt.ImplFormatter.debug_tuple_field2_finish
        f
        "Length"
        (IndexedField.get (index := 0) self)
        (IndexedField.get (index := 1) self).
    
    Global Instance AF_fmt : Length.AssociatedFunction "fmt" _ := {|
      Length.associated_function := fmt;
    |}.
    Global Instance M_fmt : Method "fmt" _ := {|
      method := fmt;
    |}.
  |}.
End Impl__crate_fmt_Debug_for_Length.

Module Impl__crate_clone_Clone_for_Length.
  Definition Self := Length.
  
  Global Instance I Unit : _crate.clone.Clone.Class Self := {|
    Definition clone (self : ref Self) : Length :=
      Length.Build
        ((_crate.clone.Clone.associated_function "clone")
          (IndexedField.get (index := 0) self))
        ((_crate.clone.Clone.associated_function "clone")
          (IndexedField.get (index := 1) self)).
    
    Global Instance AF_clone : Length.AssociatedFunction "clone" _ := {|
      Length.associated_function := clone;
    |}.
    Global Instance M_clone : Method "clone" _ := {|
      method := clone;
    |}.
  |}.
End Impl__crate_clone_Clone_for_Length.

Module Impl__crate_marker_Copy_for_Length.
  Definition Self := Length.
  
  Global Instance I Unit : _crate.marker.Copy.Class Self :=
      _crate.marker.Copy.Build_Class _.
End Impl__crate_marker_Copy_for_Length.

Module Impl_Add_for_Length.
  Definition Self := Length.
  
  Global Instance I Unit : Add.Class Self := {|
    Definition Output : Set := Length.
    Definition add (self : Self) (rhs : Length) : Length :=
      Length.Build
        (add
          (IndexedField.get (index := 0) self)
          (IndexedField.get (index := 0) rhs))
        PhantomData.
    
    Global Instance AF_add : Length.AssociatedFunction "add" _ := {|
      Length.associated_function := add;
    |}.
    Global Instance M_add : Method "add" _ := {|
      method := add;
    |}.
  |}.
End Impl_Add_for_Length.

Definition main (_ : unit) : unit :=
  let one_foot := Length.Build 12 (* 12.0 *) PhantomData in
  let one_meter := Length.Build 1000 (* 1000.0 *) PhantomData in
  let two_feet := add one_foot one_foot in
  let two_meters := add one_meter one_meter in
  _crate.io._print
    (_crate.fmt.ImplArguments.new_v1
      [ "one foot + one_foot = "; " in\n" ]
      [
        _crate.fmt.ImplArgumentV1.new_debug
          (IndexedField.get (index := 0) two_feet)
      ]) ;;
  tt ;;
  _crate.io._print
    (_crate.fmt.ImplArguments.new_v1
      [ "one meter + one_meter = "; " mm\n" ]
      [
        _crate.fmt.ImplArgumentV1.new_debug
          (IndexedField.get (index := 0) two_meters)
      ]) ;;
  tt ;;
  tt.
