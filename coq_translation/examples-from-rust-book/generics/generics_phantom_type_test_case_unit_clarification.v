(* Generated by coq-of-rust *)
Require Import Coq.Strings.String.
Require Import Coq.ZArith.ZArith.
Local Open Scope Z.

Definition u8 : Set := Z.

(* Approximation *)
Definition f64 : Set := Z.

Error Enum.

(* Impl [Inch] of trait [_crate.fmt.Debug]*)
Module ImplInch.
  Definition
    fmt
    (self : ref Self)
    (f : ref _crate.fmt.Formatter)
    : _crate.fmt.Result :=
    _crate.intrinsics.unreachable tt.
End ImplInch.
(* End impl [Inch] *)

(* Impl [Inch] of trait [_crate.clone.Clone]*)
Module ImplInch.
  Definition clone (self : ref Self) : Inch :=
    deref self.
End ImplInch.
(* End impl [Inch] *)

(* Impl [Inch] of trait [_crate.marker.Copy]*)
Module ImplInch.
  
End ImplInch.
(* End impl [Inch] *)

Error Enum.

(* Impl [Mm] of trait [_crate.fmt.Debug]*)
Module ImplMm.
  Definition
    fmt
    (self : ref Self)
    (f : ref _crate.fmt.Formatter)
    : _crate.fmt.Result :=
    _crate.intrinsics.unreachable tt.
End ImplMm.
(* End impl [Mm] *)

(* Impl [Mm] of trait [_crate.clone.Clone]*)
Module ImplMm.
  Definition clone (self : ref Self) : Mm :=
    deref self.
End ImplMm.
(* End impl [Mm] *)

(* Impl [Mm] of trait [_crate.marker.Copy]*)
Module ImplMm.
  
End ImplMm.
(* End impl [Mm] *)

Definition Length : Set :=
  f64 * PhantomData.

(* Impl [Length] of trait [_crate.fmt.Debug]*)
Module ImplLength.
  Definition
    fmt
    (self : ref Self)
    (f : ref _crate.fmt.Formatter)
    : _crate.fmt.Result :=
    _crate::fmt::ImplFormatter.debug_tuple_field2_finish
      f
      "Length"
      self.(Length<Unit>.0)
      self.(Length<Unit>.1).
End ImplLength.
(* End impl [Length] *)

(* Impl [Length] of trait [_crate.clone.Clone]*)
Module ImplLength.
  Definition clone (self : ref Self) : Length :=
    Length
      (_crate.clone.Clone.clone self.(Length<Unit>.0))
      (_crate.clone.Clone.clone self.(Length<Unit>.1)).
End ImplLength.
(* End impl [Length] *)

(* Impl [Length] of trait [_crate.marker.Copy]*)
Module ImplLength.
  
End ImplLength.
(* End impl [Length] *)

(* Impl [Length] of trait [Add]*)
Module ImplLength.
  Definition Output : Set :=
    Length.
  
  Definition add (self : Self) (rhs : Length) : Length :=
    Length (add self.(Length<Unit>.0) rhs.(Length<Unit>.0)) PhantomData.
End ImplLength.
(* End impl [Length] *)