(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Error Enum.

Module Impl__crate_fmt_Debug_for_Inch.
  Definition Self := Inch.
  
  Global Instance I : _crate.fmt.Debug.Class Self := {|
    _crate.fmt.Debug.fmt (self : ref Inch) (f : mut_ref _crate.fmt.Formatter) :=
      _crate.intrinsics.unreachable tt;
  |}.
Module ImplInch.

Module Impl__crate_clone_Clone_for_Inch.
  Definition Self := Inch.
  
  Global Instance I : _crate.clone.Clone.Class Self := {|
    _crate.clone.Clone.clone (self : ref Inch) := deref self;
  |}.
Module ImplInch.

Module Impl__crate_marker_Copy_for_Inch.
  Definition Self := Inch.
  
  Global Instance I : _crate.marker.Copy.Class Self :=
      _crate.marker.Copy.Build_Class _.
Module ImplInch.

Error Enum.

Module Impl__crate_fmt_Debug_for_Mm.
  Definition Self := Mm.
  
  Global Instance I : _crate.fmt.Debug.Class Self := {|
    _crate.fmt.Debug.fmt (self : ref Mm) (f : mut_ref _crate.fmt.Formatter) :=
      _crate.intrinsics.unreachable tt;
  |}.
Module ImplMm.

Module Impl__crate_clone_Clone_for_Mm.
  Definition Self := Mm.
  
  Global Instance I : _crate.clone.Clone.Class Self := {|
    _crate.clone.Clone.clone (self : ref Mm) := deref self;
  |}.
Module ImplMm.

Module Impl__crate_marker_Copy_for_Mm.
  Definition Self := Mm.
  
  Global Instance I : _crate.marker.Copy.Class Self :=
      _crate.marker.Copy.Build_Class _.
Module ImplMm.

Module Length.
  Inductive t : Set := Build (_ : f64) (_ : PhantomData).
  
  Global Instance Get_0 : IndexedField.Class t 0 f64 := {|
    IndexedField.get '(Build x0 _) := x0;
  |}.
  Global Instance Get_1 : IndexedField.Class t 1 PhantomData := {|
    IndexedField.get '(Build _ x1) := x1;
  |}.
End Length.
Definition Length := Length.t.

Module Impl__crate_fmt_Debug_for_Length.
  Definition Self := Length.
  
  Global Instance I : _crate.fmt.Debug.Class Self := {|
    _crate.fmt.Debug.fmt
        (self : ref Length<Unit>)
        (f : mut_ref _crate.fmt.Formatter) :=
      _crate::fmt::ImplFormatter.debug_tuple_field2_finish
        f
        "Length"
        (IndexedField.get (index := 0) self)
        (IndexedField.get (index := 1) self);
  |}.
Module ImplLength.

Module Impl__crate_clone_Clone_for_Length.
  Definition Self := Length.
  
  Global Instance I : _crate.clone.Clone.Class Self := {|
    _crate.clone.Clone.clone (self : ref Length<Unit>) :=
      Length
        (_crate.clone.Clone.clone (IndexedField.get (index := 0) self))
        (_crate.clone.Clone.clone (IndexedField.get (index := 1) self));
  |}.
Module ImplLength.

Module Impl__crate_marker_Copy_for_Length.
  Definition Self := Length.
  
  Global Instance I : _crate.marker.Copy.Class Self :=
      _crate.marker.Copy.Build_Class _.
Module ImplLength.

Module Impl_Add_for_Length.
  Definition Self := Length.
  
  Global Instance I : Add.Class Self := {|
    Add.Output := Length;
    Add.add (self : Length<Unit>) (rhs : Length) :=
      Length
        (add
          (IndexedField.get (index := 0) self)
          (IndexedField.get (index := 0) rhs))
        PhantomData;
  |}.
Module ImplLength.

Definition main (_ : unit) : unit :=
  let one_foot := Length 12 (* 12.0 *) PhantomData in
  let one_meter := Length 1000 (* 1000.0 *) PhantomData in
  let two_feet := add one_foot one_foot in
  let two_meters := add one_meter one_meter in
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["one foot + one_foot = ";" in\n"]
      [_crate::fmt::ImplArgumentV1.new_debug
        (IndexedField.get (index := 0) two_feet)]) ;;
  tt ;;
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["one meter + one_meter = ";" mm\n"]
      [_crate::fmt::ImplArgumentV1.new_debug
        (IndexedField.get (index := 0) two_meters)]) ;;
  tt ;;
  tt.
