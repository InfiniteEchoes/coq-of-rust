(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module Point.
  Record t : Set := {
    x : i32;
    y : i32;
    z : i32;
  }.
  
  Global Instance Get_x : NamedField.Class t "x" _ := {|
    NamedField.get '(Build_t x0 _ _) := x0;
  |}.
  Global Instance Get_y : NamedField.Class t "y" _ := {|
    NamedField.get '(Build_t _ x1 _) := x1;
  |}.
  Global Instance Get_z : NamedField.Class t "z" _ := {|
    NamedField.get '(Build_t _ _ x2) := x2;
  |}.
End Point.
Definition Point : Set := Point.t.

Definition main (_ : unit) : unit :=
  let point := {| Point.x := 0; Point.y := 0; Point.z := 0; |} in
  let borrowed_point := point in
  let another_borrow := point in
  _crate.io._print
    (_crate.fmt.ImplArguments.new_v1
      [ "Point has coordinates: ("; ", "; ", "; ")\n" ]
      [
        _crate.fmt.ImplArgumentV1.new_display
          (NamedField.get (name := "x") borrowed_point);
        _crate.fmt.ImplArgumentV1.new_display
          (NamedField.get (name := "y") another_borrow);
        _crate.fmt.ImplArgumentV1.new_display
          (NamedField.get (name := "z") point)
      ]) ;;
  tt ;;
  _crate.io._print
    (_crate.fmt.ImplArguments.new_v1
      [ "Point has coordinates: ("; ", "; ", "; ")\n" ]
      [
        _crate.fmt.ImplArgumentV1.new_display
          (NamedField.get (name := "x") borrowed_point);
        _crate.fmt.ImplArgumentV1.new_display
          (NamedField.get (name := "y") another_borrow);
        _crate.fmt.ImplArgumentV1.new_display
          (NamedField.get (name := "z") point)
      ]) ;;
  tt ;;
  let mutable_borrow := point in
  assign NamedField.get (name := "x") mutable_borrow := 5 ;;
  assign NamedField.get (name := "y") mutable_borrow := 2 ;;
  assign NamedField.get (name := "z") mutable_borrow := 1 ;;
  _crate.io._print
    (_crate.fmt.ImplArguments.new_v1
      [ "Point has coordinates: ("; ", "; ", "; ")\n" ]
      [
        _crate.fmt.ImplArgumentV1.new_display
          (NamedField.get (name := "x") mutable_borrow);
        _crate.fmt.ImplArgumentV1.new_display
          (NamedField.get (name := "y") mutable_borrow);
        _crate.fmt.ImplArgumentV1.new_display
          (NamedField.get (name := "z") mutable_borrow)
      ]) ;;
  tt ;;
  let new_borrowed_point := point in
  _crate.io._print
    (_crate.fmt.ImplArguments.new_v1
      [ "Point now has coordinates: ("; ", "; ", "; ")\n" ]
      [
        _crate.fmt.ImplArgumentV1.new_display
          (NamedField.get (name := "x") new_borrowed_point);
        _crate.fmt.ImplArgumentV1.new_display
          (NamedField.get (name := "y") new_borrowed_point);
        _crate.fmt.ImplArgumentV1.new_display
          (NamedField.get (name := "z") new_borrowed_point)
      ]) ;;
  tt ;;
  tt.
