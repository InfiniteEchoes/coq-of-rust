(* Generated by coq-of-rust *)
Require Import Coq.Strings.String.
Require Import Coq.ZArith.ZArith.
Local Open Scope Z.

(* Approximation *)

Definition u8 : Set := Z.
Definition u16 : Set := Z.
Definition u32 : Set := Z.
Definition u64 : Set := Z.
Definition u128 : Set := Z.

Definition i8 : Set := Z.
Definition i16 : Set := Z.
Definition i32 : Set := Z.
Definition i64 : Set := Z.
Definition i128 : Set := Z.

Definition f32 : Set := Z.
Definition f64 : Set := Z.

Module Point.
  Record t : Set := {
    x : i32;
    y : i32;
    z : i32;
  }.
End Point.
Definition Point : Set := Point.t.

Definition main (_ : unit) :=
  let point := {| Point.x := 0; Point.y := 0; Point.z := 0; |} in
  let borrowed_point := point in
  let another_borrow := point in
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["Point has coordinates: (";", ";", ";")\n"]
      [_crate::fmt::ImplArgumentV1.new_display
        borrowed_point.x;_crate::fmt::ImplArgumentV1.new_display
        another_borrow.y;_crate::fmt::ImplArgumentV1.new_display point.z]) ;;
  tt ;;
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["Point has coordinates: (";", ";", ";")\n"]
      [_crate::fmt::ImplArgumentV1.new_display
        borrowed_point.x;_crate::fmt::ImplArgumentV1.new_display
        another_borrow.y;_crate::fmt::ImplArgumentV1.new_display point.z]) ;;
  tt ;;
  let mutable_borrow := point in
  assign mutable_borrow.x := 5 ;;
  assign mutable_borrow.y := 2 ;;
  assign mutable_borrow.z := 1 ;;
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["Point has coordinates: (";", ";", ";")\n"]
      [_crate::fmt::ImplArgumentV1.new_display
        mutable_borrow.x;_crate::fmt::ImplArgumentV1.new_display
        mutable_borrow.y;_crate::fmt::ImplArgumentV1.new_display
        mutable_borrow.z]) ;;
  tt ;;
  let new_borrowed_point := point in
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["Point now has coordinates: (";", ";", ";")\n"]
      [_crate::fmt::ImplArgumentV1.new_display
        new_borrowed_point.x;_crate::fmt::ImplArgumentV1.new_display
        new_borrowed_point.y;_crate::fmt::ImplArgumentV1.new_display
        new_borrowed_point.z]) ;;
  tt ;;
  tt.