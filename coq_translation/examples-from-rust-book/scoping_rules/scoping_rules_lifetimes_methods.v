(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module Owner.
  Inductive t : Set := Build (_ : i32).
  
  Global Instance Get_0 : IndexedField.Class t 0 _ := {|
    IndexedField.get '(Build x0) := x0;
  |}.
End Owner.
Definition Owner := Owner.t.

Module ImplOwner.
  Definition Self := Owner.
  
  Definition add_one (self : mut_ref Self) :=
    assign
      (IndexedField.get (index := 0) self)
      (add (IndexedField.get (index := 0) self) 1) ;;
    tt.
  
  Global Instance Method_add_one : Notation.Dot "add_one" := {|
    Notation.dot := add_one;
  |}.
  Global Instance AssociatedFunction_add_one :
    Notation.DoubleColon Self "add_one" := {|
    Notation.double_colon := add_one;
  |}.
  
  Definition print (self : ref Self) :=
    _crate.io._print
      (_crate.fmt.Arguments::["new_v1"]
        [ "`print`: "; "\n" ]
        [
          _crate.fmt.ArgumentV1::["new_display"]
            (IndexedField.get (index := 0) self)
        ]) ;;
    tt ;;
    tt.
  
  Global Instance Method_print : Notation.Dot "print" := {|
    Notation.dot := print;
  |}.
  Global Instance AssociatedFunction_print :
    Notation.DoubleColon Self "print" := {|
    Notation.double_colon := print;
  |}.
End ImplOwner.

Definition main (_ : unit) : unit :=
  let owner := Owner.Build 18 in
  owner.["add_one"] ;;
  owner.["print"] ;;
  tt.
