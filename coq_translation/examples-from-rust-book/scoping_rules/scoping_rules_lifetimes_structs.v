(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module Borrowed.
  Inductive t : Set := Build (_ : ref i32).
  
  Global Instance Get_0 : IndexedField.Class t 0 ref i32 := {|
    IndexedField.get '(Build x0) := x0;
  |}.
End Borrowed.
Definition Borrowed := Borrowed.t.

Module Impl__crate_fmt_Debug_for_Borrowed.
  Definition Self := Borrowed.
  
  Global Instance I : _crate.fmt.Debug.Class Self := {|
    _crate.fmt.Debug.fmt
        (self : ref Borrowed<'a>)
        (f : mut_ref _crate.fmt.Formatter) :=
      _crate::fmt::ImplFormatter.debug_tuple_field1_finish
        f
        "Borrowed"
        (IndexedField.get (index := 0) self);
  |}.
Module ImplBorrowed.

Module NamedBorrowed.
  Record t : Set := {
    x : ref i32;
    y : ref i32;
  }.
End NamedBorrowed.
Definition NamedBorrowed : Set := NamedBorrowed.t.

Module Impl__crate_fmt_Debug_for_NamedBorrowed.
  Definition Self := NamedBorrowed.
  
  Global Instance I : _crate.fmt.Debug.Class Self := {|
    _crate.fmt.Debug.fmt
        (self : ref NamedBorrowed<'a>)
        (f : mut_ref _crate.fmt.Formatter) :=
      _crate::fmt::ImplFormatter.debug_struct_field2_finish
        f
        "NamedBorrowed"
        "x"
        self.x
        "y"
        self.y;
  |}.
Module ImplNamedBorrowed.

Error Enum.

Module Impl__crate_fmt_Debug_for_Either.
  Definition Self := Either.
  
  Global Instance I : _crate.fmt.Debug.Class Self := {|
    _crate.fmt.Debug.fmt
        (self : ref Either<'a>)
        (f : mut_ref _crate.fmt.Formatter) :=
      match self with
      | Either.Num (__self_0) =>
        _crate::fmt::ImplFormatter.debug_tuple_field1_finish f "Num" __self_0
      | Either.Ref (__self_0) =>
        _crate::fmt::ImplFormatter.debug_tuple_field1_finish f "Ref" __self_0
      end;
  |}.
Module ImplEither.

Definition main (_ : unit) :=
  let x := 18 in
  let y := 15 in
  let single := Borrowed x in
  let double := {| NamedBorrowed.x := x; NamedBorrowed.y := y; |} in
  let reference := Either.Ref x in
  let number := Either.Num y in
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["x is borrowed in ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_debug single]) ;;
  tt ;;
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["x and y are borrowed in ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_debug double]) ;;
  tt ;;
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["x is borrowed in ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_debug reference]) ;;
  tt ;;
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["y is *not* borrowed in ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_debug number]) ;;
  tt ;;
  tt.
