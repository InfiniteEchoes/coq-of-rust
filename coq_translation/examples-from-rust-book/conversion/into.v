(* Generated by coq-of-rust *)
Require Import Coq.Strings.String.
Require Import Coq.ZArith.ZArith.
Local Open Scope Z.

(* Approximation *)

Definition u8 : Set := Z.
Definition u16 : Set := Z.
Definition u32 : Set := Z.
Definition u64 : Set := Z.
Definition u128 : Set := Z.

Definition i8 : Set := Z.
Definition i16 : Set := Z.
Definition i32 : Set := Z.
Definition i64 : Set := Z.
Definition i128 : Set := Z.

Definition f32 : Set := Z.
Definition f64 : Set := Z.

Module Number.
  Record t : Set := {
    value : i32;
  }.
End Number.
Definition Number : Set := Number.t.

(* Impl [Number] of trait [_crate.fmt.Debug]*)
Module ImplNumber.
  Definition
    fmt
    (self : static_ref Number)
    (f : mut_ref _crate.fmt.Formatter)
    : _crate.fmt.Result :=
    _crate::fmt::ImplFormatter.debug_struct_field1_finish
      f
      "Number"
      "value"
      self.value.
End ImplNumber.
(* End impl [Number] *)

(* Impl [Number] of trait [From]*)
Module ImplNumber.
  Definition from (item : i32) : Number :=
    {| Number.value := item; |}.
End ImplNumber.
(* End impl [Number] *)

Definition main (_ : unit) :=
  let int := 5 in
  let num := into int in
  _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["My number is ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_debug num]) ;;
  tt ;;
  tt.