(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Import Root.std.prelude.rust_2015.

Module From := std.convert.From.

Module Number.
  Record t : Set := {
    value : i32;
  }.
End Number.
Definition Number : Set := Number.t.

Module Impl__crate_fmt_Debug_for_Number.
  Definition Self := Number.
  
  Global Instance I : _crate.fmt.Debug.Class Self := {|
    _crate.fmt.Debug.fmt (self : ref Self) (f : mut_ref _crate.fmt.Formatter) :=
      _crate.fmt.ImplFormatter.debug_struct_field1_finish
        f
        "Number"
        "value"
        self.value;
  |}.
End Impl__crate_fmt_Debug_for_Number.

Module Impl_From_for_Number.
  Definition Self := Number.
  
  Global Instance I : From.Class i32 Self := {|
    From.from (item : i32) := {| Number.value := item; |};
  |}.
End Impl_From_for_Number.

Definition main (_ : unit) : unit :=
  let int := 5 in
  let num := method "into" int in
  _crate.io._print
    (_crate.fmt.ImplArguments.new_v1
      [ "My number is "; "\n" ]
      [ _crate.fmt.ImplArgumentV1.new_debug num ]) ;;
  tt ;;
  tt.
