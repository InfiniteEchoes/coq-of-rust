(* Generated by coq-of-rust *)
Require Import Coq.Strings.String.
Require Import Coq.ZArith.ZArith.
Local Open Scope Z.

(* Approximation *)

Definition u8 : Set := Z.
Definition u16 : Set := Z.
Definition u32 : Set := Z.
Definition u64 : Set := Z.
Definition u128 : Set := Z.

Definition i8 : Set := Z.
Definition i16 : Set := Z.
Definition i32 : Set := Z.
Definition i64 : Set := Z.
Definition i128 : Set := Z.

Definition f32 : Set := Z.
Definition f64 : Set := Z.

Definition create_fn (_ : unit) :=
  let text := to_owned "Fn" in
  fun  => _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["This is a: ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_display text]) ;;
  tt.

Error OpaqueTy.

Definition create_fnmut (_ : unit) :=
  let text := to_owned "FnMut" in
  fun  => _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["This is a: ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_display text]) ;;
  tt.

Error OpaqueTy.

Definition create_fnonce (_ : unit) :=
  let text := to_owned "FnOnce" in
  fun  => _crate.io._print
    (_crate::fmt::ImplArguments.new_v1
      ["This is a: ";"\n"]
      [_crate::fmt::ImplArgumentV1.new_display text]) ;;
  tt.

Error OpaqueTy.

Definition main (_ : unit) :=
  let fn_plain := create_fn tt in
  let fn_mut := create_fnmut tt in
  let fn_once := create_fnonce tt in
  fn_plain tt ;;
  fn_mut tt ;;
  fn_once tt ;;
  tt.