(* Generated by coq-of-rust *)
Require Import Coq.Strings.String.
Require Import Coq.ZArith.ZArith.
Local Open Scope Z.

(* Approximation *)

Definition u8 : Set := Z.
Definition u16 : Set := Z.
Definition u32 : Set := Z.
Definition u64 : Set := Z.
Definition u128 : Set := Z.

Definition i8 : Set := Z.
Definition i16 : Set := Z.
Definition i32 : Set := Z.
Definition i64 : Set := Z.
Definition i128 : Set := Z.

Definition f32 : Set := Z.
Definition f64 : Set := Z.

Definition main (_ : unit) :=
  let reference := 4 in
  match reference with
  | val =>
    _crate.io._print
      (_crate::fmt::ImplArguments.new_v1
        ["Got a value via destructuring: ";"\n"]
        [_crate::fmt::ImplArgumentV1.new_debug val]) ;;
    tt
  end ;;
  match deref reference with
  | val =>
    _crate.io._print
      (_crate::fmt::ImplArguments.new_v1
        ["Got a value via dereferencing: ";"\n"]
        [_crate::fmt::ImplArgumentV1.new_debug val]) ;;
    tt
  end ;;
  let _not_a_reference := 3 in
  let _is_a_reference := 3 in
  let value := 5 in
  let mut_value := 6 in
  match value with
  | r =>
    _crate.io._print
      (_crate::fmt::ImplArguments.new_v1
        ["Got a reference to a value: ";"\n"]
        [_crate::fmt::ImplArgumentV1.new_debug r]) ;;
    tt
  end ;;
  match mut_value with
  | m =>
    assign deref m := add (deref m) 10 ;;
    _crate.io._print
      (_crate::fmt::ImplArguments.new_v1
        ["We added 10. `mut_value`: ";"\n"]
        [_crate::fmt::ImplArgumentV1.new_debug m]) ;;
    tt ;;
    tt
  end.